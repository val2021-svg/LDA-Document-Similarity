low
cost
optimization
acoustic
wave
propagation
code
performance
instructor
Stephane
Vialle
Department
DOMINANTE
MATHÉMATIQUES
DATA
SCIENCES
DOMINANTE
INFORMATIQUE
ET
NUMÉRIQUE
Language
instruction
ANGLAIS
Campus
campus
DE
PARIS
SACLAY
Workload
HEE
site
hour
HPE
Description
Project
topic
partnership
INTEL
regardless
type
application
run
parallel
machine
HPC
high
performance
computing
environment
regardless
level
efficiency
term
performance
energy
footprint
easily
impact
input
parameter
generally
negligible
particular
act
parameter
parallel
algorithm
size
shape
domain
perform
sub
problem
partitioning
HPC
implementation
parameter
control
example
cache
block
reduce
datum
access
time
parallel
application
deployment
parameter
control
process
MPI
thread
openmp
distribution
placement
computational
task
efficiently
occupy
cpu
core
parameter
control
thread
scheduling
policy
usually
control
environment
variable
different
input
parameter
allow
improve
execution
HPC
code
computing
platform
remain
extremely
difficult
understand
exactly
application
behave
processor
architecture
application
efficient
modify
source
code
dependency
test
case
execution
environment
preponderant
context
parameter
space
important
dimension
optimization
algorithm
appear
fundamental
converge
global
local
minimum
cost
function
express
execution
time
energy
footprint
optimization
method
algorithm
optimize
operation
HPC
calculation
code
execution
test
case
HPC
application
long
parallel
machine
parameter
space
large
optimization
algorithm
require
ten
thousand
execution
application
achievable
scale
computing
kernel
remain
unbearable
scale
complete
application
necessary
choose
optimization
method
consume
experiment
optimize
reduce
footprint
targeted
HPC
code
pre
study
consume
compute
resource
amount
look
expensive
optimization
method
find
optimum
convergence
speed
optimization
algorithm
quality
minimization
execution
time
energy
footprint
targeted
HPC
application
technical
detail
system
start
project
high
performance
computing
code
HPC
code
simulate
acoustic
wave
equation
homogeneous
isotropic
finite
difference
medium
run
multi
core
pc
cluster
MPI
OpenMP
genetic
algorithm
capable
iterate
parameter
HPC
code
size
shape
domain
cache
blocking
compilation
flag
environment
variable
number
placement
thread
remain
sequential
limit
single
machine
genetic
algorithm
call
successively
acoustic
wave
simulation
code
different
configuration
multithreaded
version
machine
distribute
version
cluster
allow
search
optimal
configuration
pc
apply
pc
run
cluster
pc
finite
difference
explicit
term
number
float
operation
easily
count
number
point
process
number
float
operation
perform
execution
deduce
processing
speed
Giga
point
GFlops
try
minimize
simulation
time
maximize
processing
speed
dedicate
collect
hardware
counter
obtain
exact
power
consumption
processor
memory
study
detail
energy
impact
optimization
genetic
algorithm
population
base
optimization
method
computationally
resource
intensive
implementation
provide
pc
search
optimal
configuration
code
long
prohibitive
overcome
limitation
adopt
approach
firstly
identify
optimization
method
likely
converge
relatively
test
efficient
configuration
HPC
code
lead
fast
low
power
consumption
execution
able
study
optimization
method
trajectory
Hill
Climbing
Simulated
Annealing
tabu
search
gluttonous
behaviour
method
population
greedy
genetic
algorithm
ant
colony
good
solution
seek
long
time
allow
execute
simulation
optimize
acoustic
wave
propagation
try
experiment
optimization
method
variant
previously
experiment
converge
quickly
solution
good
quality
fast
optimization
integrate
application
form
dynamic
pre
processing
beginning
execution
parallel
machine
constitute
selfoptimization
mechanism
application
Quarter
number
Prerequisites
term
CS
course
year
course
common
course
Systèmes
programmation
common
course
Algorithmique
complexité
course
ST
common
course
optimisation
specific
course
Méthodes
algorithmes
parallèle
pour
prerequisite
Parts
common
course
CIP
Convergence
Intégration
Parts
common
course
EDP
Equations
aux
dérivées
partielle
Probabilités
Knowledge
linear
algebra
need
Syllabus
main
step
study
presentation
provide
computing
kernel
complementary
course
methodology
characterization
acceleration
HPC
code
hardware
counter
roofline
modeling
NUMA
placement
vectorization
handle
remote
computing
resource
CentraleSupélec
Teaching
Data
Center
experimentation
code
provide
INTEL
Identification
promise
optimization
method
problem
launch
HPC
simulation
acoustic
wave
development
hybrid
method
consider
Development
solution
sequential
Python
simulation
code
provide
study
Development
optimization
simulation
campaign
multicore
machine
management
weekly
quota
calculation
hour
identification
solution
good
reduce
footprint
HPC
acoustic
wave
simulation
code
Development
experimentation
solution
allow
search
quickly
good
quality
configuration
order
integrate
search
simulation
application
pre
processing
stage
Development
second
optimization
simulation
campaign
multi
core
machine
management
weekly
quota
calculation
hour
study
end
report
oral
presentation
evaluate
investigative
approach
adopt
quality
solution
find
term
speed
convergence
optimization
algorithm
test
computation
time
energy
consumption
optimize
parallel
simulation
management
quota
calculation
resource
take
place
project
rmk
different
group
student
implement
different
optimization
method
class
component
lecture
lab
etc
step
complementary
lecture
HPC
code
optimization
configuration
parameter
simulation
code
provide
handle
remote
compute
resource
Teaching
Data
Center
experimentation
initial
solution
identification
promising
optimization
method
step
sequential
implementation
Python
optimization
method
call
parallel
simulation
code
HPC
optimizationsimulation
campaign
multi
core
computing
server
step
execution
optimization
simulation
campaign
parallel
machine
management
quota
hour
analysis
obtain
performance
Intermediate
report
presentation
progress
work
plan
final
sprint
step
identification
method
search
quickly
fairly
good
configuration
new
implementation
Python
step
new
optimization
simulation
campaign
parallel
machine
management
quota
hour
analysis
obtain
performance
final
report
oral
presentation
grade
project
evaluate
midterm
talk
end
final
talk
end
final
sprint
talk
entire
team
lead
individual
mark
case
strongly
heterogeneous
team
talk
evaluation
consider
overall
quality
talk
slide
progress
talk
mark
total
mark
Resources
Teaching
Staff
LISN
Ph
Thierry
INTEL
Talbot
CentraleSupélec
CVN
Vialle
CentraleSupélec
Workplace
compute
resource
student
work
CentraleSupelec
classroom
electrical
outlet
reliable
wifi
internet
access
student
laptop
connect
remote
pc
cluster
Data
Center
Education
CentraleSupelec
final
oral
exam
place
CentraleSupelec
afternoon
project
learn
outcome
cover
course
end
project
student
able
Learning
Outcome
identify
parameter
impact
execution
parallel
code
configure
execution
Learning
Outcome
choose
configure
optimization
method
converge
limited
number
experiment
Learning
Outcome
develop
sequential
Python
code
call
parallel
code
parallel
architecture
Learning
Outcome
deploy
intensive
simulation
remote
compute
resource
Learning
Outcome
identify
limit
study
accord
available
computational
resource
Learning
Outcome
manage
quota
calculation
resource
intensive
calculation
campaign
description
skill
acquire
end
course
sense
value
creation
company
customer
know
convince
lead
project
team