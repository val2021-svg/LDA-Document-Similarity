design
verification
critical
system
instructor
Idir
Ait
Sadoune
Department
DÃ‰PARTEMENT
INFORMATIQUE
Language
instruction
FRANCAIS
Campus
campus
DE
PARIS
SACLAY
Workload
HEE
site
hour
HPE
Description
course
aim
design
verification
complex
critical
system
technique
Software
Engineering
component
system
heterogeneous
continuous
physical
discrete
software
methodology
tool
present
course
multiple
integrate
development
cycle
framework
idea
start
analysis
phase
semi
formal
tool
UML
SysML
system
engineering
describe
structure
system
interaction
scientific
way
design
validation
phase
formal
technique
software
engineering
time
stochastic
hybrid
modeling
temporal
logic
modelchecke
main
objective
approach
formal
model
obtain
system
expect
respect
constraint
impose
specification
environment
opposite
case
extract
state
system
question
correct
functioning
case
economic
gain
interesting
appreciable
engineer
correct
problem
detect
verification
model
go
stage
implementation
programming
Quarter
number
Prerequisites
term
CS
course
Information
system
programming
algorithmic
complexity
Model
representation
analysis
Syllabus
presentation
temporal
logic
LTL
CTL
lecture
verification
Model
Checking
lecture
time
Automata
modeling
Verification
lecture
tutorial
tutorial
tutorial
stochastic
model
modeling
Verification
lecture
tutorial
practical
session
class
component
lecture
lab
etc
lecture
tutorial
practical
session
Grading
final
exam
resource
contributor
speaker
Marc
Aiguier
Department
Computer
Science
Idir
Ait
Sadoune
Department
Computer
Science
Paolo
Ballarini
Department
Computer
Science
Lina
Ye
Department
Computer
Science
learn
outcome
cover
course
end
course
student
able
Model
critical
software
system
different
formal
approach
temporal
logic
automata
time
automata
stochastic
model
hybrid
automata
Model
critical
software
system
take
account
different
type
constraint
functional
non
functional
temporal
Analyze
scientific
way
model
critical
software
system
technique
Software
Engineering
formal
verification
technique
model
checking
extract
state
critical
software
system
question
correct
functioning
validate
model
critical
software
system
system
expect
description
skill
acquire
end
course
Analyze
design
build
complex
system
scientific
technological
human
economic
component
Develop
depth
skill
engineering
field
family
sense
value
creation
company
profession
customer
operational
responsible
innovative
digital
world
know
convince