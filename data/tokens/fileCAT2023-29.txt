object
orient
software
Engineering
Instructors
Paolo
Ballarini
Dominique
Marcadet
Department
DÃ‰PARTEMENT
INFORMATIQUE
Language
instruction
FRANCAIS
ANGLAIS
Campus
campus
DE
PARIS
SACLAY
Workload
HEE
site
hour
HPE
elective
category
Fundamental
Sciences
advanced
level
yes
Description
discipline
concern
concept
Software
engineering
SE
technique
tool
aim
production
quality
software
SE
see
iterative
process
start
set
requirement
yield
software
product
execution
different
phase
inlcude
design
development
documentation
maintainance
testing
quality
produce
software
evaluate
respect
different
factor
typically
compliance
requirement
openness
modification
extension
ease
maintenance
testing
course
aim
provide
engineering
student
overview
problem
software
design
development
mean
object
orient
programming
OOP
paradigm
learn
Java
programming
language
student
acquire
basic
skill
software
development
process
state
art
Integrated
Development
Environment
IDE
focus
object
orient
modeling
UML
language
Javadocbased
code
documentation
Junit
base
development
unit
test
student
acquire
basic
skill
essential
realization
industrial
software
Quarter
number
French
English
Prerequisites
term
CS
course
Information
Systems
Programming
Algorithmics
Complexity
Syllabus
object
orient
programming
Java
class
object
encapsulation
class
composition
inheritance
class
interface
Exception
handling
generic
collection
software
engineering
UML
diagram
design
pattern
application
Devolopment
test
unit
JUnit
framework
multi
thread
programming
Introduction
graphical
user
interface
programming
Java
solution
design
problem
development
final
project
book
effective
Java
Joshua
Bloch
think
Java
Bruce
Class
component
lecture
lab
etc
lecture
Tutorial
class
Project
development
exam
Grading
integrate
project
final
examination
course
support
bibliography
Eckel
Lecture
note
Paolo
Ballarini
Lectures
slide
Tutorials
solution
Resources
Lecturer
Paolo
BALLARINI
Tutorial
class
Paolo
Ballarini
Arnault
Lapitre
Software
tool
Java
JDK
Eclipse
Papyrus
IDE
Learning
outcome
cover
course
end
course
student
able
apply
basic
element
object
orient
programming
Java
language
able
solve
mildly
complex
programming
problem
familiar
different
phase
software
development
cycle
choose
appropriate
tool
able
chose
adequate
level
abstraction
work
able
apply
principle
UML
modeling
process
software
design
development
know
conceive
develop
simple
graphical
user
interface
Java
language
specific
phase
program
know
apply
basic
design
principle
development
flexible
maintainable
software
solution
familiar
multi
threading
programming
description
skill
acquire
end
course
specify
design
develop
test
software