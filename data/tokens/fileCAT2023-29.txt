      2EL1520 - Object oriented software Engineering       Instructors: Paolo Ballarini, Dominique Marcadet  Department: DÉPARTEMENT INFORMATIQUE  Language of instruction: FRANCAIS, ANGLAIS  Campus: CAMPUS DE PARIS - SACLAY  Workload (HEE): 60  On-site hours (HPE): 35,00  Elective Category : Fundamental Sciences  Advanced level : Yes        Description    is  a  discipline  concerned  with  concepts,  Software  engineering  (SE)  techniques and tools aimed at the production of quality software. SE can be  seen as an iterative process, that, starting from a set of requirements, yields  a  software  product  through  the  execution  of  different  phases,  inlcuding  :  design, development, documentation, maintainance, testing.  The quality of  the  produced   software  is  evaluated  with  respect  to  different  factors,  typically  :  the  compliance  with  the  requirements,  the  «  openness  »  to  modifications/extensions, the ease of maintenance/testing.     This course aims at providing engineering students with an overview to the  problem  of  software  design  and  development  by  means  of  the  object  oriented programming (OOP) paradigm. By learning the Java programming  language  students  will  acquire  basic  skills  in  the  software  development  process using a state-of-the-art Integrated Development Environment (IDE).  By focusing on object-oriented modeling, the UML language, the Javadocbased  code  documentation,  the  Junit-based  development  of  unit-tests,  students  will  acquire  basic  skills  essential  to  the  realization  of  industrial  software.       Quarter number    SG6 in French and SG8 in English         Prerequisites (in terms of CS courses)   •  1CC1000 : Information Systems and Programming  •  1CC2000 : Algorithmics and Complexity   105       Syllabus    1.  Introduction to object oriented programming in Java: classes,   objects, encapsulation   2.  Classes composition and inheritance   3.  Abstract classes, interfaces  4.  Exception handling, generics, collections  5.  Introduction to software engineering: UML diagrams  6.  Design patterns and applications  7.  Devolopment of test units with JUnit framework  8.  Multi-threaded programming  9.  Introduction to graphical user interface programming in Java  10. Solution of a design problem through development of a final project   •  Books: "Effective Java", Joshua Bloch; "Thinking in Java", Bruce        Class components (lecture, labs, etc.)    •  Lectures: 15h00 (SG6) - 16h30 (SG8)  •  Tutorial classes: 18h00 (SG6) - 16h30 (SG8)  •  Project development: 24h00  •  Exam: 2h00      Grading  40% on integrated project 60% on final examination (2h00)     Course support, bibliography    Eckel.   •  Lecture notes (Paolo Ballarini)  •  11 Lectures slides    •  11 Tutorials with solutions      Resources    •  Lecturer: Paolo BALLARINI  •  2 Tutorial classes: Paolo Ballarini, Arnault Lapitre  •  Software tools: Java JDK, Eclipse/Papyrus IDE        Learning outcomes covered on the course  At the end of this course, the students will :   •  be able to apply the basic elements of object oriented programming   using the Java language;   106      •  be able to solve a mildly complex programming problem using the   •  be familiar with the different phases of software development cycle   and choose some appropriate tools;   •  be able to chose an adequate level of abstraction when working on a   •  be able to apply the principles of UML modeling in the process of   software design and development;   •  know how to conceive and develop  simple graphical user interface   Java language;   specific phase;   programs;   •  know how to apply basic design principles for development of   flexible/maintainable software solutions;   •  be familiar with multi-threading programming.          Description of the skills acquired at the end of the course  C6.3 : Specify, design, develop and test software  107   