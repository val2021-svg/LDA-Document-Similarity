   2EL2510 - Architecture and design of digital systems     Instructors: Anthony Kolar  Department: DÉPARTEMENT ÉLECTRONIQUE ET ÉLECTROMAGNÉTISME  Language of instruction: FRANCAIS  Campus: CAMPUS DE PARIS - SACLAY  Workload (HEE): 60  On-site hours (HPE): 35,00  Elective Category : Fundamental Sciences  Advanced level : No      Description   In  a  top-down  approach,  students  will  learn  how  to  specify  and  design  dedicated  digital  processing  systems,  with  the  goal  of  integration  into  an  FPGA or ASIC.  The  microelectronic back-end  aspect  (placement  routing)  will be  reserved  for  students  wishing  to  specialize  in  the  field  and  studied  in  third  year  honors.  The course will lead to the creation of an application, for example a small  processing  processor,  and  will  thus  make  it  possible  to  understand  the  various concepts used in this one.    At the end of this course, students will be able to:  • Define and design the architecture of a digital processing chain  • Describe a model of this treatment in VHDL.  • Design a simple processor and program it      Quarter number  SG6     Prerequisites (in terms of CS courses)  Few knowledge in Digital Electronic     Syllabus  Class 1: Architecture of processing units: data path and sequencer - part. 1  Class 2: Architecture of processing units: data path and sequencer - part. 2   Class 3: VHDL Description  Class 4: Time Analysis of Synchronous Systems  Class 5: GPUs: Architectures and Data Path Part. 1  Class 6: GPUs: Architectures and Data Path Part. 2  Class_TD 1: Algorithmic Logic Units share. 1  Class_TD 2: The Algorithmic Logical Units part. 2  Class_TD 3: Registers, memories and pipeline part. 1  Class_TD 4: Registers, memories and pipeline part. 2  Class_TD 5: The instruction game   213      Class_TD 6: The instruction decoding part. 1  Class_TD 7: The cache and its strategies  Class_TD 8: The instruction decoding part. 2  Class_TD 9: Executions and conditional jumps  Cours_TD 10: The compiler       Class components (lecture, labs, etc.)     1 - Definition of the notion of a Cours_PC:    This is a very strong interaction between a classical course and its almost  immediate  implementation,  although  here  the  approach  is  reversed:  the exercises have as objectives to make realize where are the critical  points without knowing the solution to there remedy. Once aware of  the problem, the course brings the solution to students who are then  much more sensitive. This approach is only possible under the condition  that  there  is  no  clear  cut  between  the  course  and  the  PC,  hence  the  notion of Cours_TD.   ATTENTION: Absence from this part makes it almost impossible to fully  understand the subject and therefore validate the course.    2 - Project to realize partially in homework and in team:   6 project sessions (EL) of 1h30 in the presence of a supervisor   •  21h homework (interspersed with previous project   sessions).   •  1 session of 3H with oral presentation then demonstration in   front of the group of the result   The department will provide each students with an FPGA-type board (the  same ones used for the first-year course) that they will keep until the end  of their project.     Grading    •  Examen - Processor Design  •  Project Report and presentation   Ratio: 70% examen - 30% Projet        Resources    DE0 FPGA Board From Altera          214      Learning outcomes covered on the course    The course "Architecture of Digital Systems" will provide students with the  concepts necessary to:    Define a processing architecture    Architecture of processing units: data path and sequencer  Description of each of the above functions in VHDL  Time analysis of synchronous systems    Design of a processor (Project type approach)    ALU, records and pipeline  Building a processor core  Instructional game  Instruction Decoding, Jumps and Pipeline    Data processing on graphic processor    GPU architecture: data path  Parallel programming language via CUDA type library     Description of the skills acquired at the end of the course    C1.1 Study a problem in its entirety, the situation as a whole. Identify,  formulate and analyze a problem in its scientific, economic and human  dimensions.  C1.3: Solve the problem with a practice of approximation, simulation and  experimentation.  C2.3 Identify and quickly acquire new knowledge and skills necessary in the  relevant fields, whether technical, economic or other.  C2.5 Master the skills of one of the basic engineering professions (at the  junior level).  C3.6: Evaluate the effectiveness, feasibility and robustness of the solutions  proposed.  C6.3: Specify, design, produce and validate software.   215   