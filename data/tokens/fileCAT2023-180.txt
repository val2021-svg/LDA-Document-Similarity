Optimization
infrasonic
wave
detection
verification
Comprehensive
Nuclear
Test
Ban
Treaty
Instructors
Stephane
Vialle
Department
DOMINANTE
MATHÉMATIQUES
DATA
SCIENCES
DOMINANTE
INFORMATIQUE
ET
NUMÉRIQUE
Language
instruction
ANGLAIS
Campus
campus
DE
PARIS
SACLAY
Workload
HEE
site
hour
HPE
Description
Project
topic
partnership
CEA
DAM
rmk
Project
propose
student
European
Union
CEA
DAM
high
performance
computing
resource
mission
particularly
environmental
monitoring
field
seismic
acoustic
wave
propagation
phenomenon
Département
France
locate
Bruyères
Châtel
tsunamis
strong
earthquake
french
warning
center
mission
base
skill
nuclear
area
detection
identification
technology
CEA
DAM
bring
expertise
fight
nuclear
proliferation
terrorism
order
inform
national
authority
case
nuclear
test
CEA
DAM
participate
implementation
verification
mean
assess
non
violation
Comprehensive
Nuclear
Test
Ban
Treaty
CTBT
study
propose
concern
characterization
detection
infrasonic
wave
long
distance
take
account
topography
atmospheric
condition
wind
compressible
axisymmetric
hydrocode
support
adaptive
mesh
refinement
AMR
hybrid
parallelism
mpi
domain
decomposition
OpenMP
multithreading
Cartesian
grid
develop
laboratory
simulate
propagation
blast
acoustic
wave
presence
relief
building
wind
Judiciously
locate
sensor
allow
overpressure
signal
recording
type
problem
solve
AMR
hydrocode
consist
localize
explosion
determine
power
basis
probe
recording
locate
scene
second
consist
define
judicious
sensor
location
order
maximize
chance
detection
case
explosion
give
area
case
brute
force
investigation
consist
simulate
possible
configuration
retain
good
unthinkable
consume
gigantic
hour
computation
design
solution
long
overpriced
type
problem
objective
study
twofold
Propose
solution
characterize
source
acoustic
wave
find
solution
reasonable
time
high
performance
computer
limited
quota
computation
hour
end
develop
optimization
loop
hydrocode
efficiently
possible
parsimoniously
explore
possible
configuration
space
economically
find
good
solution
technical
detail
study
system
topic
characterization
source
urban
scale
take
account
building
consist
locate
determine
power
explosion
follow
accident
malicious
act
know
neighboring
sensor
recording
location
know
building
surround
area
take
account
recording
come
practice
simulation
fictitious
initial
condition
location
power
source
know
student
topic
set
surveillance
network
question
design
sensor
network
allow
detection
hypothetic
explosive
experiment
area
surveillance
sensor
limited
number
judiciously
locate
order
maximize
chance
detection
weather
consider
wind
relief
furthermore
maintenance
reason
sensor
locate
call
accessible
area
Quarter
number
Prerequisites
term
CS
course
year
course
common
course
Systèmes
programmation
common
course
Algorithmique
complexité
course
ST
common
course
optimisation
specific
course
Méthodes
algorithmes
parallèle
pour
Parts
common
course
CIP
Convergence
Intégration
Probabilités
Parts
common
course
EDP
Equations
aux
dérivées
partielle
Knowledge
linear
algebra
need
prerequisite
Syllabus
main
task
study
information
beginning
project
intervention
CEA
DAM
presentation
physical
principle
numerical
method
provide
compressible
hydrocode
simulate
propagation
blast
acoustic
wave
Identification
compressible
hydrodynamic
code
parameter
impact
parallel
execution
time
handling
resource
remote
compute
center
CEA
formalization
problem
selection
value
optimize
choice
optimization
method
adapt
problem
design
implementation
Python
optimization
code
call
parallel
simulation
code
optimization
code
parallelize
allow
algorithm
parallel
master
code
call
demand
parallel
hydrocode
test
debugging
complete
optimization
code
CEA
parallel
computer
small
medium
problem
simplify
relief
building
reduce
map
weather
axisymmetric
configuration
fast
Scale
term
cover
land
size
addition
relief
building
wind
map
experiment
big
problem
large
number
node
compute
core
analysis
solution
quality
performance
Code
optimization
improve
solution
find
computation
performance
Estimation
maximum
size
problem
handle
available
resource
study
duration
analysis
feasibility
extension
case
time
allocate
project
submission
report
presentation
evaluate
quality
solution
find
effectiveness
extensibility
code
find
optimal
solution
computation
resource
quota
management
occur
project
rmk
different
group
student
work
different
topic
topic
implement
different
optimization
method
class
component
lecture
lab
etc
step
course
complement
handle
compute
resource
formalization
problem
choice
optimisation
algorithm
step
Python
numerical
implementation
optimisation
algorithm
call
compressible
hydrodynamic
parallel
code
supply
CEA
DAM
step
execution
parallel
machine
simulation
basic
configuration
debug
algorithm
optimization
code
evaluation
result
quality
computation
performance
small
medium
size
problem
comparison
reference
solution
Midterm
report
slide
progress
talk
current
result
future
work
final
sprint
step
experiment
complex
large
problem
similar
real
problem
analyse
quality
computed
solution
identification
source
performance
lock
loss
require
code
improvement
push
limit
supportable
problem
size
step
estimate
maximal
problem
size
process
function
available
computing
resource
maximum
duration
project
analyse
feasibility
simulation
final
report
slide
extended
global
talk
project
approach
result
grade
project
evaluate
midterm
talk
end
final
talk
end
final
sprint
talk
entire
team
lead
individual
mark
case
strongly
heterogeneous
team
talk
evaluation
consider
overall
quality
talk
slide
progress
talk
mark
total
mark
Resources
teaching
staff
Cagnol
CentraleSupélec
MICS
Vialle
CentraleSupélec
LISN
Jaouen
CEA
DAM
Workplace
compute
resource
project
student
work
CentraleSupelec
classroom
electrical
outlet
reliable
wifi
internet
access
student
laptop
connect
remote
powerful
computing
resource
manage
CEA
DAM
second
project
final
sprint
student
work
day
TGCC
TERATEC
site
Bruyères
Châtel
CEA
DAM
ensure
daily
movement
student
final
oral
exam
place
CentraleSupelec
afternoon
project
learn
outcome
cover
course
finish
course
student
able
Learning
Outcome
identify
parametrize
optimisation
method
adapt
evaluation
iteration
require
compute
resource
computation
time
Learning
Outcome
implement
debug
sequential
parallel
Python
code
supercomputer
developpe
scratch
library
call
distribute
compute
kernel
Learning
Outcome
deploy
intensive
computing
application
remote
resource
Learning
Outcome
identify
limitation
study
function
available
computing
resource
Learning
Outcome
manage
compute
resource
quota
intensive
computing
campaign
description
skill
acquire
end
course
sense
value
creation
company
customer
know
convince
lead
project
team