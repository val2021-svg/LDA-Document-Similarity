Modelica
bond
graph
multi
domain
modeling
analysis
simulation
instructor
Pierre
Haessig
Department
campus
DE
RENNES
Language
instruction
ANGLAIS
Campus
campus
DE
RENNES
Workload
HEE
site
hour
HPE
elective
category
Engineering
Sciences
advanced
level
description
course
offer
expand
know
theoretical
understanding
modeling
analysis
simulation
complex
multiphysical
system
simulation
drone
build
thermal
performance
bioreactor
context
technical
system
usually
assemble
component
ex
car
engine
starter
brake
behavioral
model
come
different
technical
field
electrical
mechanical
thermal
result
component
master
different
people
engineering
complex
system
raise
difficulty
exchange
build
model
elective
aim
learn
commonly
modeling
tool
meet
need
Modelica
bond
graph
bond
graph
graphical
description
energy
link
component
system
representation
base
analogy
physical
domain
mechanical
inertia
electrical
inductance
bond
graph
modeling
possible
perform
structural
analysis
model
system
particular
core
notion
causality
analysis
reveal
physical
functioning
energy
exchange
system
Modelica
non
proprietary
language
follow
need
Model
system
span
physical
domain
easily
build
structured
model
reusable
component
collaborate
effectively
build
model
team
unlike
Simulink
Simscape
example
Modelica
allow
easily
graphically
describe
simulate
dynamic
complex
system
thousand
variable
industry
building
transportation
electrical
network
etc
increasingly
popular
thank
open
source
nature
software
OpenModelica
able
freely
reuse
know
course
different
setting
Modelica
acquire
skill
model
structure
collaboration
applicable
environment
Quarter
number
Prerequisites
term
CS
course
Syllabus
course
schedule
principle
bond
graph
formalism
analogy
domain
Bond
graph
personal
work
procedure
assign
causality
Analysis
structural
property
Extraction
state
space
equation
Modelica
personal
work
Introduction
Modelica
brief
history
industry
principle
get
start
Modelica
practical
example
ODE
electrical
circuit
mechanic
Analogies
variable
flow
potential
Hybrid
system
discontinuity
event
example
diode
rectifier
structuring
model
Inheritance
composition
Packages
creation
customize
physical
component
Versioning
personal
work
require
depend
student
need
exercise
help
people
start
Git
versione
software
GitLab
collaborative
development
platform
modeling
project
personal
work
project
Multiphysics
model
Modelica
group
example
project
subject
tidal
power
plant
drone
fuse
electromagnetic
switch
new
model
dynamic
disease
final
evaluation
Evaluation
method
class
component
lecture
lab
etc
bond
graph
teaching
interleaved
lecture
exercise
Modelica
teaching
practical
computer
base
exercise
concise
lecture
introduce
key
concept
order
enable
practical
mastery
tool
focus
practice
small
exercise
classroom
small
exercise
selfstudy
class
finally
final
project
grade
evaluation
elective
base
activity
final
exam
theoretical
aspect
document
bond
graph
Modelica
fundamental
final
grade
modeling
project
final
grade
sheet
detail
project
objective
give
start
project
relation
objective
evaluation
criterion
list
detail
project
grade
individualize
group
elective
take
place
form
apply
course
learning
happen
classroom
participation
class
essential
acquire
knowledge
skill
elective
participation
respect
deadline
count
final
grade
course
support
bibliography
Material
Modelica
course
include
extended
list
reference
Material
Bond
graph
course
slide
deck
teacher
Bond
Graphs
graphical
language
analysis
multiphysical
system
Michael
Tiller
Modelica
Example
book
publish
continuously
update
URL
Geneviève
Dauphin
Tanguy
Les
bond
graph
livre
Hermès
Resources
teacher
Pierre
Haessig
Computer
session
free
software
OpenModelica
note
instal
software
macOS
difficult
necessary
work
Linux
virtual
machine
alternative
Parallels
Desktop
pay
successfully
test
learn
outcome
cover
course
bond
graph
course
learn
concept
representation
able
simple
example
model
system
bond
graph
include
application
causality
assignment
procedure
analyze
structural
property
system
extract
state
space
equation
Modelica
course
objective
Modelica
language
OpenModelica
development
environment
model
simulate
dynamic
system
know
reuse
standard
Modelica
model
structure
complex
model
reusable
component
work
team
common
complex
model
versione
system
git
Description
skill
acquire
end
course
skill
describe
possible
validate
follow
CentraleSupélec
engineering
skill
Analyze
design
build
complex
system
scientific
technological
human
economic
component
particular
modeling
develop
appropriate
model
choose
correct
modeling
scale
relevant
simplifying
assumption
design
specify
implement
validate
complex
system
course
complex
system
design
fact
Modelica
model
complex
system
operational
responsible
innovative
digital
world
particular
solve
problem
numerically
particular
simulation
dynamical
system
design
software
Modelica
model
see
software