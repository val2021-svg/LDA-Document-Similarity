theoretical
computing
instructor
Marc
Aiguier
Pascale
Le
Gall
Department
DÉPARTEMENT
INFORMATIQUE
Language
instruction
FRANCAIS
Campus
campus
DE
PARIS
SACLAY
Workload
HEE
site
hour
HPE
elective
category
Fundamental
Sciences
advanced
level
yes
description
teaching
give
fundamental
computer
science
paradigm
computation
reduction
calculation
step
step
resolution
logical
inference
automatic
reasoning
Quarter
number
Prerequisites
term
CS
course
Algorithms
Complexity
course
ST
Modelling
interest
mathematical
abstraction
reasoning
Syllabus
course
follow
fundamental
notion
Induction
recurrence
found
set
Computability
Gödel
Herbrand
recursive
function
ture
machine
associate
indecidability
result
mathematical
logic
syntax
semantic
proof
system
propositional
order
logic
detail
course
compose
follow
Induction
recurrence
follow
notion
present
set
theory
order
preordering
upper
low
bound
found
set
induction
formal
system
proof
correctness
completeness
propostional
logic
follow
notion
present
syntax
semantic
proof
system
binary
decision
tree
tableaux
method
DPLL
algorithm
satisfiability
SAT
solver
proof
system
resolution
sequent
calculus
natural
deduction
Computability
complexity
follow
notion
present
primitive
recursive
recursive
function
computable
non
computable
problem
ture
machine
equivalence
theorem
church
thesis
complexity
theory
order
logic
order
logic
extension
propositional
logic
privileged
logic
describe
data
type
structure
class
component
lecture
lab
etc
course
divide
hour
lecture
hour
tutorial
personal
work
project
computer
implementation
problem
solve
propose
constitute
continuous
control
mark
grade
evaluation
mean
project
write
exam
hour
final
grade
divide
continuous
assessment
write
exam
exam
handout
personal
note
allow
electronic
device
laptop
mobile
phone
tablet
allow
course
support
bibliography
student
provide
handout
French
TD
subject
correction
element
resource
teaching
team
name
lecturer
Marc
Aiguier
Pascale
Le
Ga
Size
class
student
Software
tool
number
licence
require
software
prolog
solver
proof
assistant
free
software
student
install
personal
machine
learn
outcome
cover
course
understand
fundamental
principle
formal
mathematically
base
tool
underlie
method
designing
verifying
implement
computer
system
formalize
computing
problem
master
fundamental
theoretical
tool
necessary
reason
formalization
theoretical
tool
base
computation
model
classically
complexity
analysis
algorithm
course
Algorithms
Complexity
reasoning
method
base
mathematical
logic
description
skill
acquire
end
course
formalize
computing
problem
master
fundamental
theoretical
tool
necessary
reason
formalization
theoretical
tool
base
computation
model
classically
complexity
analysis
algorithm
course
Algorithms
complexity
reasoning
method
base
mathematical
logic