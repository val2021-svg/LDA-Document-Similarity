2CC3005 - Optimisation - DUAL          Instructors: Charles Soussen  Department: DÉPARTEMENT MATHÉMATIQUES  Language of instruction: FRANCAIS, ANGLAIS  Campus: CAMPUS DE PARIS - SACLAY  Workload (HEE): 60  On-site hours (HPE): 36,00            Description    Optimization  arises  in  many  domains  including  science,  mathematics,  engineering,  economy  and  finance.  For  instance,  the  problems  of  stock  management,  resource  allocation,  control  of  mechanical  structures,  and  data analysis may all be addressed as optimization problems. Although these  problems  are  of  various  nature,  they  can  all  be  formulated  as  the  minimization  of  a  cost  function  over  a  given  domain  and  under  a  set  of  constraints.  Nevertheless,  there  are  many  existing  optimization  methods  depending on the structure of the problem at hand.   This  course  aims  at  teaching  a  comprehensive  overview  of  the  classical  optimization  approaches  and  algorithms.  The  objective  is  to  provide  the  background that will allow the participants to practically address the various  optimization problems they might encounter, and help them choosing the  adequate  algorithm.  The  lecture  will  cover  local  and  simple  global  optimization  methods.  The  topics  will  include  gradient-based  algorithms,  constrained optimization, least-squares methods, and discrete optimization.         Prerequisites (in terms of CS courses)    There are no official prerequisites for this course. However, the students  are expected to have basic knowledge of linear algebra and matrix  computation.        Syllabus    1.  Unconstrained optimization : gradient-based algorithms, Newton   and quasi-Newton algorithms.   29      2.  Least squares problems.  3.  Constrained optimization.   4.  Global and discrete optimization.     Class components (lecture, labs, etc.)     Teaching is composed of courses and labs (TD). The labs cover computional  aspects (solve KKT systems, in particular) and the practical use of the  Matlab optimization solvers.       Grading     Written final exam (2 hours, 100 %)    The evaluation of the course will be based on a written exam (2 hours). The  exam may cover all topics seen during the lectures and practical sessions,  with a focus on local optimization algorithms: knowledge of algorithms,  simple calculations, practical knowledge of how to call optimization solvers  (in this case, the help of the matlab solver will be given) using matlab  pseudo-code, interpretation of the results of numerical simulations. Only  basic knowledge is requested regarding global and discrete optimization.  The evaluation will be possibly related to the content of the lab sessions.     No documents allowed. Computers and calculators will be forbidden.  Mobile phones must be switched off.        Course support, bibliography   •  J. Nocedal and J. S. Wright, Numerical optimization, 2nd edition,   Springer Verlag, New York, Jul. 2006.   •  R. Fletcher, Practical Methods of Optimization, 2nd edition, Wiley,   2000   •  A. Björck, Numerical Methods for Least Squares Problems, Society for   Industrial and Applied Mathematics, Philadephia, Apr. 1996.   •  R. Horst, P. M. Pardalos, and V. T. Nguyen, Introduction to Global   Optimization, 2nd edition, Springer, Dec. 2000.        Resources    - Complete slides   - Software tools: see matlab documentation (optimtool)  - Related Courses: see the books in bibliography   30             Learning outcomes covered on the course    The course aims to introduce students to the main concepts and numerical  methods of numerical optimization. The course is mainly focused on local  optimization, although some general principles of global optimization  algorithms are sketched as well.       Description of the skills acquired at the end of the course    It is expected that by the end of the course, the students will have a good  knowledge of the main algorithms and will be able to carry out simple  calculations : calculation of gradients, Hessians, resolution of simple  optimization problems, e.g. by expressing the KKT conditions and solving  the related system. Additionally, the students should have a practical  knowledge of how to call Matlab optimization solvers and should be able  to give an interpretation of the numerical results.        31   