   2SC6410 - Data models and design schemas       Instructors: Jean-Francois Lalande  Department: CAMPUS DE RENNES  Language of instruction: FRANCAIS  Campus: CAMPUS DE RENNES  Workload (HEE): 60  On-site hours (HPE): 34,50        Description   This course allows to discover the necessary notions for building software  that  manipulate  large  quantities  of  data.  It  learns  the  object  oriented  programming  using  two  languages,  Java  and  Kotlin.  It  then  present  the  methologie  of  software  design  with  a  link  with  the  course  of  system  modeling that introduce the different activity diagrams (activities, sequence,  blocks,  etc.).  The  course  helps  students to wonder  about  the  structure  of  software  when  using  different  design  patterns.  For  this,  the  labs  that  are  based  on  the  course  of  system  modelling  that  occurs  in  parallel  will  be  realized in inversed pedagogy.    In a second part, the course forcuses on the data manpulation. The goal is  to  learn  the  basic  about  database  software  and  the  theoritical  problems  behing  them  (data  structuration,  requests).  Finally,  this  part  is  concluded  with  a  presentation  of  software  that  helps  to  implement  object-relation  mapping.       Quarter number  ST5     Prerequisites (in terms of CS courses)   •  Information System and Programming  •  Algorithms and complexity      Syllabus      Object oriented programming (Java/Kotlin)   •  Inheritance, encapsulation, polymorphism, dynamic dispatch  •  Generiity, covariance, contravariance, invariance  •  Fonctions and anonymous classes  •  Types and type inference   496      Lab: discovering of the languages and illustrating the course notions  Personal work: go further with reflexivity, serialisation, Java NIO,  JNI, Garbage collector    Software engineering   •  Historical methods: V cycle, spiral circle, tests  •  UML diagrams: using diagrams seen in "System Models" (use case,   sequence, classes, state transition)   •  Test and continuous integration   Relational databases   •  Relational algebra  •  Database design, normalization  •  SQL language, requests, indexing  •  Optimizing requests   Introduction to design patterns     Personal work: finish the lab on oriented programming + databases +  software engineering       Class components (lecture, labs, etc.)  34.5 HPE: 12h of course, 3h of exercices, 18h of practical labs, 1,5 Exam     Grading  Final exam: 1h30 : 50 % Continuous control: TL software engineering, by  pairs of students: 15 min of presentation, 10 minutes of questions : 50%. In  case of a justified absence to one of the intermediary examinations, the  grade of this latter is replaced by the grade of the final examination.      Resources  Computer labs;   •  Eclipse, IntelliJ  •  Database software      Learning outcomes covered on the course    •  Do object oriented programming  •  Choose correctly the adequate design patterns  •  Know how to manipulate data in a database  •  Modelise with an object-relation mapping   497           Description of the skills acquired at the end of the course     C1.2 Use and develop adapted models, chose the righ model scale and the  hypothesis for tackle the problem    Evaluated by a written exam.    C2.2 Transfer knowledge and methodology across multiple disciplinary  fields.    Validated by the introduction of the ST5 (Quizz).    C6.2 Specify, develop, and validate a complex software    Evaluated by a lab for designing a library.   498   